Grammar

    0 $accept: programa $end

    1 programa: lista_decl

    2 lista_decl: declaracao recursao1

    3 recursao1: %empty
    4          | declaracao recursao1

    5 declaracao: decl_var
    6           | decl_func

    7 decl_var: tipo_especif ID FIM_EXPRESS

    8 decl_func: tipo_especif ID INI_PARAM params FIM_PARAM instruc_composta

    9 tipo_especif: INT
   10             | FLOAT
   11             | POINT
   12             | SHAPE

   13 params: %empty
   14       | lista_param

   15 lista_param: param recursao2

   16 recursao2: %empty
   17          | SEPARA_ARG param recursao2

   18 param: tipo_especif ID

   19 instruc_composta: INI_INSTRUC decl_local lista_instruc FIM_INSTRUC

   20 decl_local: recursao3

   21 recursao3: %empty
   22          | decl_var recursao3

   23 lista_instruc: recursao4

   24 recursao4: %empty
   25          | instrucao recursao4

   26 instrucao: instruc_expr
   27          | instruc_composta
   28          | instruc_cond
   29          | instruc_iterac
   30          | instruc_return

   31 instruc_expr: expressao FIM_EXPRESS
   32             | FIM_EXPRESS

   33 instruc_cond: IF INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1

   34 fatora1: %empty
   35        | ELSE INI_INSTRUC instrucao FIM_INSTRUC

   36 instruc_iterac: FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC

   37 instruc_return: RETURN expressao FIM_EXPRESS

   38 expressao: var atrop expressao
   39          | express_simp

   40 var: ID

   41 express_simp: express_soma fatora2

   42 fatora2: %empty
   43        | relop express_soma

   44 express_soma: termo recursao5

   45 recursao5: %empty
   46          | addop termo recursao5

   47 termo: factor recursao6

   48 recursao6: %empty
   49          | mulop factor recursao6

   50 factor: INI_PARAM expressao FIM_PARAM
   51       | endereco
   52       | var
   53       | chamada
   54       | num
   55       | LITERAL

   56 chamada: ID INI_PARAM arg FIM_PARAM

   57 arg: %empty
   58    | lista_arg

   59 lista_arg: expressao recursao7

   60 recursao7: %empty
   61          | SEPARA_ARG expressao recursao7

   62 atrop: ATR
   63      | PLUS_ATR
   64      | MINUS_ATR
   65      | TIMES_ATR
   66      | OVER_ATR

   67 relop: LT
   68      | GT
   69      | LE
   70      | GE
   71      | EQ
   72      | NE
   73      | logop

   74 logop: NOT
   75      | AND
   76      | OR

   77 addop: PLUS_OP
   78      | MINUS_OP

   79 mulop: TIMES_OP
   80      | OVER_OP

   81 num: INTEIRO
   82    | DECIMAL

   83 endereco: ACESSO_END var


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 33
ELSE (259) 35
FOR (260) 36
RETURN (261) 37
INT (262) 9
FLOAT (263) 10
POINT (264) 11
SHAPE (265) 12
LITERAL (266) 55
INTEIRO (267) 81
DECIMAL (268) 82
ID (269) 7 8 18 40 56
LT (270) 67
GT (271) 68
LE (272) 69
GE (273) 70
EQ (274) 71
NE (275) 72
NOT (276) 74
AND (277) 75
OR (278) 76
ATR (279) 62
PLUS_ATR (280) 63
MINUS_ATR (281) 64
TIMES_ATR (282) 65
OVER_ATR (283) 66
PLUS_OP (284) 77
MINUS_OP (285) 78
TIMES_OP (286) 79
OVER_OP (287) 80
INI_PARAM (288) 8 33 36 50 56
FIM_PARAM (289) 8 33 36 50 56
INI_INSTRUC (290) 19 33 35 36
FIM_INSTRUC (291) 19 33 35 36
FIM_EXPRESS (292) 7 31 32 36 37
SEPARA_ARG (293) 17 61
ACESSO_END (294) 83


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
programa (41)
    on left: 1, on right: 0
lista_decl (42)
    on left: 2, on right: 1
recursao1 (43)
    on left: 3 4, on right: 2 4
declaracao (44)
    on left: 5 6, on right: 2 4
decl_var (45)
    on left: 7, on right: 5 22
decl_func (46)
    on left: 8, on right: 6
tipo_especif (47)
    on left: 9 10 11 12, on right: 7 8 18
params (48)
    on left: 13 14, on right: 8
lista_param (49)
    on left: 15, on right: 14
recursao2 (50)
    on left: 16 17, on right: 15 17
param (51)
    on left: 18, on right: 15 17
instruc_composta (52)
    on left: 19, on right: 8 27
decl_local (53)
    on left: 20, on right: 19
recursao3 (54)
    on left: 21 22, on right: 20 22
lista_instruc (55)
    on left: 23, on right: 19
recursao4 (56)
    on left: 24 25, on right: 23 25
instrucao (57)
    on left: 26 27 28 29 30, on right: 25 33 35 36
instruc_expr (58)
    on left: 31 32, on right: 26
instruc_cond (59)
    on left: 33, on right: 28
fatora1 (60)
    on left: 34 35, on right: 33
instruc_iterac (61)
    on left: 36, on right: 29
instruc_return (62)
    on left: 37, on right: 30
expressao (63)
    on left: 38 39, on right: 31 33 36 37 38 50 59 61
var (64)
    on left: 40, on right: 38 52 83
express_simp (65)
    on left: 41, on right: 36 39
fatora2 (66)
    on left: 42 43, on right: 41
express_soma (67)
    on left: 44, on right: 41 43
recursao5 (68)
    on left: 45 46, on right: 44 46
termo (69)
    on left: 47, on right: 44 46
recursao6 (70)
    on left: 48 49, on right: 47 49
factor (71)
    on left: 50 51 52 53 54 55, on right: 47 49
chamada (72)
    on left: 56, on right: 53
arg (73)
    on left: 57 58, on right: 56
lista_arg (74)
    on left: 59, on right: 58
recursao7 (75)
    on left: 60 61, on right: 59 61
atrop (76)
    on left: 62 63 64 65 66, on right: 38
relop (77)
    on left: 67 68 69 70 71 72 73, on right: 43
logop (78)
    on left: 74 75 76, on right: 73
addop (79)
    on left: 77 78, on right: 46
mulop (80)
    on left: 79 80, on right: 49
num (81)
    on left: 81 82, on right: 54
endereco (82)
    on left: 83, on right: 51


State 0

    0 $accept: . programa $end
    1 programa: . lista_decl
    2 lista_decl: . declaracao recursao1
    5 declaracao: . decl_var
    6           | . decl_func
    7 decl_var: . tipo_especif ID FIM_EXPRESS
    8 decl_func: . tipo_especif ID INI_PARAM params FIM_PARAM instruc_composta
    9 tipo_especif: . INT
   10             | . FLOAT
   11             | . POINT
   12             | . SHAPE

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    POINT  shift, and go to state 3
    SHAPE  shift, and go to state 4

    programa      go to state 5
    lista_decl    go to state 6
    declaracao    go to state 7
    decl_var      go to state 8
    decl_func     go to state 9
    tipo_especif  go to state 10


State 1

    9 tipo_especif: INT .

    $default  reduce using rule 9 (tipo_especif)


State 2

   10 tipo_especif: FLOAT .

    $default  reduce using rule 10 (tipo_especif)


State 3

   11 tipo_especif: POINT .

    $default  reduce using rule 11 (tipo_especif)


State 4

   12 tipo_especif: SHAPE .

    $default  reduce using rule 12 (tipo_especif)


State 5

    0 $accept: programa . $end

    $end  shift, and go to state 11


State 6

    1 programa: lista_decl .

    $default  reduce using rule 1 (programa)


State 7

    2 lista_decl: declaracao . recursao1
    3 recursao1: . %empty  [$end]
    4          | . declaracao recursao1
    5 declaracao: . decl_var
    6           | . decl_func
    7 decl_var: . tipo_especif ID FIM_EXPRESS
    8 decl_func: . tipo_especif ID INI_PARAM params FIM_PARAM instruc_composta
    9 tipo_especif: . INT
   10             | . FLOAT
   11             | . POINT
   12             | . SHAPE

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    POINT  shift, and go to state 3
    SHAPE  shift, and go to state 4

    $default  reduce using rule 3 (recursao1)

    recursao1     go to state 12
    declaracao    go to state 13
    decl_var      go to state 8
    decl_func     go to state 9
    tipo_especif  go to state 10


State 8

    5 declaracao: decl_var .

    $default  reduce using rule 5 (declaracao)


State 9

    6 declaracao: decl_func .

    $default  reduce using rule 6 (declaracao)


State 10

    7 decl_var: tipo_especif . ID FIM_EXPRESS
    8 decl_func: tipo_especif . ID INI_PARAM params FIM_PARAM instruc_composta

    ID  shift, and go to state 14


State 11

    0 $accept: programa $end .

    $default  accept


State 12

    2 lista_decl: declaracao recursao1 .

    $default  reduce using rule 2 (lista_decl)


State 13

    3 recursao1: . %empty  [$end]
    4          | . declaracao recursao1
    4          | declaracao . recursao1
    5 declaracao: . decl_var
    6           | . decl_func
    7 decl_var: . tipo_especif ID FIM_EXPRESS
    8 decl_func: . tipo_especif ID INI_PARAM params FIM_PARAM instruc_composta
    9 tipo_especif: . INT
   10             | . FLOAT
   11             | . POINT
   12             | . SHAPE

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    POINT  shift, and go to state 3
    SHAPE  shift, and go to state 4

    $default  reduce using rule 3 (recursao1)

    recursao1     go to state 15
    declaracao    go to state 13
    decl_var      go to state 8
    decl_func     go to state 9
    tipo_especif  go to state 10


State 14

    7 decl_var: tipo_especif ID . FIM_EXPRESS
    8 decl_func: tipo_especif ID . INI_PARAM params FIM_PARAM instruc_composta

    INI_PARAM    shift, and go to state 16
    FIM_EXPRESS  shift, and go to state 17


State 15

    4 recursao1: declaracao recursao1 .

    $default  reduce using rule 4 (recursao1)


State 16

    8 decl_func: tipo_especif ID INI_PARAM . params FIM_PARAM instruc_composta
    9 tipo_especif: . INT
   10             | . FLOAT
   11             | . POINT
   12             | . SHAPE
   13 params: . %empty  [FIM_PARAM]
   14       | . lista_param
   15 lista_param: . param recursao2
   18 param: . tipo_especif ID

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    POINT  shift, and go to state 3
    SHAPE  shift, and go to state 4

    $default  reduce using rule 13 (params)

    tipo_especif  go to state 18
    params        go to state 19
    lista_param   go to state 20
    param         go to state 21


State 17

    7 decl_var: tipo_especif ID FIM_EXPRESS .

    $default  reduce using rule 7 (decl_var)


State 18

   18 param: tipo_especif . ID

    ID  shift, and go to state 22


State 19

    8 decl_func: tipo_especif ID INI_PARAM params . FIM_PARAM instruc_composta

    FIM_PARAM  shift, and go to state 23


State 20

   14 params: lista_param .

    $default  reduce using rule 14 (params)


State 21

   15 lista_param: param . recursao2
   16 recursao2: . %empty  [FIM_PARAM]
   17          | . SEPARA_ARG param recursao2

    SEPARA_ARG  shift, and go to state 24

    $default  reduce using rule 16 (recursao2)

    recursao2  go to state 25


State 22

   18 param: tipo_especif ID .

    $default  reduce using rule 18 (param)


State 23

    8 decl_func: tipo_especif ID INI_PARAM params FIM_PARAM . instruc_composta
   19 instruc_composta: . INI_INSTRUC decl_local lista_instruc FIM_INSTRUC

    INI_INSTRUC  shift, and go to state 26

    instruc_composta  go to state 27


State 24

    9 tipo_especif: . INT
   10             | . FLOAT
   11             | . POINT
   12             | . SHAPE
   17 recursao2: SEPARA_ARG . param recursao2
   18 param: . tipo_especif ID

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    POINT  shift, and go to state 3
    SHAPE  shift, and go to state 4

    tipo_especif  go to state 18
    param         go to state 28


State 25

   15 lista_param: param recursao2 .

    $default  reduce using rule 15 (lista_param)


State 26

    7 decl_var: . tipo_especif ID FIM_EXPRESS
    9 tipo_especif: . INT
   10             | . FLOAT
   11             | . POINT
   12             | . SHAPE
   19 instruc_composta: INI_INSTRUC . decl_local lista_instruc FIM_INSTRUC
   20 decl_local: . recursao3
   21 recursao3: . %empty  [IF, FOR, RETURN, LITERAL, INTEIRO, DECIMAL, ID, INI_PARAM, INI_INSTRUC, FIM_INSTRUC, FIM_EXPRESS, ACESSO_END]
   22          | . decl_var recursao3

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    POINT  shift, and go to state 3
    SHAPE  shift, and go to state 4

    $default  reduce using rule 21 (recursao3)

    decl_var      go to state 29
    tipo_especif  go to state 30
    decl_local    go to state 31
    recursao3     go to state 32


State 27

    8 decl_func: tipo_especif ID INI_PARAM params FIM_PARAM instruc_composta .

    $default  reduce using rule 8 (decl_func)


State 28

   16 recursao2: . %empty  [FIM_PARAM]
   17          | . SEPARA_ARG param recursao2
   17          | SEPARA_ARG param . recursao2

    SEPARA_ARG  shift, and go to state 24

    $default  reduce using rule 16 (recursao2)

    recursao2  go to state 33


State 29

    7 decl_var: . tipo_especif ID FIM_EXPRESS
    9 tipo_especif: . INT
   10             | . FLOAT
   11             | . POINT
   12             | . SHAPE
   21 recursao3: . %empty  [IF, FOR, RETURN, LITERAL, INTEIRO, DECIMAL, ID, INI_PARAM, INI_INSTRUC, FIM_INSTRUC, FIM_EXPRESS, ACESSO_END]
   22          | . decl_var recursao3
   22          | decl_var . recursao3

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    POINT  shift, and go to state 3
    SHAPE  shift, and go to state 4

    $default  reduce using rule 21 (recursao3)

    decl_var      go to state 29
    tipo_especif  go to state 30
    recursao3     go to state 34


State 30

    7 decl_var: tipo_especif . ID FIM_EXPRESS

    ID  shift, and go to state 35


State 31

   19 instruc_composta: . INI_INSTRUC decl_local lista_instruc FIM_INSTRUC
   19                 | INI_INSTRUC decl_local . lista_instruc FIM_INSTRUC
   23 lista_instruc: . recursao4
   24 recursao4: . %empty  [FIM_INSTRUC]
   25          | . instrucao recursao4
   26 instrucao: . instruc_expr
   27          | . instruc_composta
   28          | . instruc_cond
   29          | . instruc_iterac
   30          | . instruc_return
   31 instruc_expr: . expressao FIM_EXPRESS
   32             | . FIM_EXPRESS
   33 instruc_cond: . IF INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1
   36 instruc_iterac: . FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC
   37 instruc_return: . RETURN expressao FIM_EXPRESS
   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    IF           shift, and go to state 36
    FOR          shift, and go to state 37
    RETURN       shift, and go to state 38
    LITERAL      shift, and go to state 39
    INTEIRO      shift, and go to state 40
    DECIMAL      shift, and go to state 41
    ID           shift, and go to state 42
    INI_PARAM    shift, and go to state 43
    INI_INSTRUC  shift, and go to state 26
    FIM_EXPRESS  shift, and go to state 44
    ACESSO_END   shift, and go to state 45

    $default  reduce using rule 24 (recursao4)

    instruc_composta  go to state 46
    lista_instruc     go to state 47
    recursao4         go to state 48
    instrucao         go to state 49
    instruc_expr      go to state 50
    instruc_cond      go to state 51
    instruc_iterac    go to state 52
    instruc_return    go to state 53
    expressao         go to state 54
    var               go to state 55
    express_simp      go to state 56
    express_soma      go to state 57
    termo             go to state 58
    factor            go to state 59
    chamada           go to state 60
    num               go to state 61
    endereco          go to state 62


State 32

   20 decl_local: recursao3 .

    $default  reduce using rule 20 (decl_local)


State 33

   17 recursao2: SEPARA_ARG param recursao2 .

    $default  reduce using rule 17 (recursao2)


State 34

   22 recursao3: decl_var recursao3 .

    $default  reduce using rule 22 (recursao3)


State 35

    7 decl_var: tipo_especif ID . FIM_EXPRESS

    FIM_EXPRESS  shift, and go to state 17


State 36

   33 instruc_cond: IF . INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1

    INI_PARAM  shift, and go to state 63


State 37

   36 instruc_iterac: FOR . INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC

    INI_PARAM  shift, and go to state 64


State 38

   37 instruc_return: RETURN . expressao FIM_EXPRESS
   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    expressao     go to state 65
    var           go to state 55
    express_simp  go to state 56
    express_soma  go to state 57
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    num           go to state 61
    endereco      go to state 62


State 39

   55 factor: LITERAL .

    $default  reduce using rule 55 (factor)


State 40

   81 num: INTEIRO .

    $default  reduce using rule 81 (num)


State 41

   82 num: DECIMAL .

    $default  reduce using rule 82 (num)


State 42

   40 var: ID .  [LT, GT, LE, GE, EQ, NE, NOT, AND, OR, ATR, PLUS_ATR, MINUS_ATR, TIMES_ATR, OVER_ATR, PLUS_OP, MINUS_OP, TIMES_OP, OVER_OP, FIM_PARAM, FIM_EXPRESS, SEPARA_ARG]
   56 chamada: ID . INI_PARAM arg FIM_PARAM

    INI_PARAM  shift, and go to state 66

    $default  reduce using rule 40 (var)


State 43

   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   50       | INI_PARAM . expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    expressao     go to state 67
    var           go to state 55
    express_simp  go to state 56
    express_soma  go to state 57
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    num           go to state 61
    endereco      go to state 62


State 44

   32 instruc_expr: FIM_EXPRESS .

    $default  reduce using rule 32 (instruc_expr)


State 45

   40 var: . ID
   83 endereco: ACESSO_END . var

    ID  shift, and go to state 68

    var  go to state 69


State 46

   27 instrucao: instruc_composta .

    $default  reduce using rule 27 (instrucao)


State 47

   19 instruc_composta: INI_INSTRUC decl_local lista_instruc . FIM_INSTRUC

    FIM_INSTRUC  shift, and go to state 70


State 48

   23 lista_instruc: recursao4 .

    $default  reduce using rule 23 (lista_instruc)


State 49

   19 instruc_composta: . INI_INSTRUC decl_local lista_instruc FIM_INSTRUC
   24 recursao4: . %empty  [FIM_INSTRUC]
   25          | . instrucao recursao4
   25          | instrucao . recursao4
   26 instrucao: . instruc_expr
   27          | . instruc_composta
   28          | . instruc_cond
   29          | . instruc_iterac
   30          | . instruc_return
   31 instruc_expr: . expressao FIM_EXPRESS
   32             | . FIM_EXPRESS
   33 instruc_cond: . IF INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1
   36 instruc_iterac: . FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC
   37 instruc_return: . RETURN expressao FIM_EXPRESS
   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    IF           shift, and go to state 36
    FOR          shift, and go to state 37
    RETURN       shift, and go to state 38
    LITERAL      shift, and go to state 39
    INTEIRO      shift, and go to state 40
    DECIMAL      shift, and go to state 41
    ID           shift, and go to state 42
    INI_PARAM    shift, and go to state 43
    INI_INSTRUC  shift, and go to state 26
    FIM_EXPRESS  shift, and go to state 44
    ACESSO_END   shift, and go to state 45

    $default  reduce using rule 24 (recursao4)

    instruc_composta  go to state 46
    recursao4         go to state 71
    instrucao         go to state 49
    instruc_expr      go to state 50
    instruc_cond      go to state 51
    instruc_iterac    go to state 52
    instruc_return    go to state 53
    expressao         go to state 54
    var               go to state 55
    express_simp      go to state 56
    express_soma      go to state 57
    termo             go to state 58
    factor            go to state 59
    chamada           go to state 60
    num               go to state 61
    endereco          go to state 62


State 50

   26 instrucao: instruc_expr .

    $default  reduce using rule 26 (instrucao)


State 51

   28 instrucao: instruc_cond .

    $default  reduce using rule 28 (instrucao)


State 52

   29 instrucao: instruc_iterac .

    $default  reduce using rule 29 (instrucao)


State 53

   30 instrucao: instruc_return .

    $default  reduce using rule 30 (instrucao)


State 54

   31 instruc_expr: expressao . FIM_EXPRESS

    FIM_EXPRESS  shift, and go to state 72


State 55

   38 expressao: var . atrop expressao
   52 factor: var .  [LT, GT, LE, GE, EQ, NE, NOT, AND, OR, PLUS_OP, MINUS_OP, TIMES_OP, OVER_OP, FIM_PARAM, FIM_EXPRESS, SEPARA_ARG]
   62 atrop: . ATR
   63      | . PLUS_ATR
   64      | . MINUS_ATR
   65      | . TIMES_ATR
   66      | . OVER_ATR

    ATR        shift, and go to state 73
    PLUS_ATR   shift, and go to state 74
    MINUS_ATR  shift, and go to state 75
    TIMES_ATR  shift, and go to state 76
    OVER_ATR   shift, and go to state 77

    $default  reduce using rule 52 (factor)

    atrop  go to state 78


State 56

   39 expressao: express_simp .

    $default  reduce using rule 39 (expressao)


State 57

   41 express_simp: express_soma . fatora2
   42 fatora2: . %empty  [FIM_PARAM, FIM_EXPRESS, SEPARA_ARG]
   43        | . relop express_soma
   67 relop: . LT
   68      | . GT
   69      | . LE
   70      | . GE
   71      | . EQ
   72      | . NE
   73      | . logop
   74 logop: . NOT
   75      | . AND
   76      | . OR

    LT   shift, and go to state 79
    GT   shift, and go to state 80
    LE   shift, and go to state 81
    GE   shift, and go to state 82
    EQ   shift, and go to state 83
    NE   shift, and go to state 84
    NOT  shift, and go to state 85
    AND  shift, and go to state 86
    OR   shift, and go to state 87

    $default  reduce using rule 42 (fatora2)

    fatora2  go to state 88
    relop    go to state 89
    logop    go to state 90


State 58

   44 express_soma: termo . recursao5
   45 recursao5: . %empty  [LT, GT, LE, GE, EQ, NE, NOT, AND, OR, FIM_PARAM, FIM_EXPRESS, SEPARA_ARG]
   46          | . addop termo recursao5
   77 addop: . PLUS_OP
   78      | . MINUS_OP

    PLUS_OP   shift, and go to state 91
    MINUS_OP  shift, and go to state 92

    $default  reduce using rule 45 (recursao5)

    recursao5  go to state 93
    addop      go to state 94


State 59

   47 termo: factor . recursao6
   48 recursao6: . %empty  [LT, GT, LE, GE, EQ, NE, NOT, AND, OR, PLUS_OP, MINUS_OP, FIM_PARAM, FIM_EXPRESS, SEPARA_ARG]
   49          | . mulop factor recursao6
   79 mulop: . TIMES_OP
   80      | . OVER_OP

    TIMES_OP  shift, and go to state 95
    OVER_OP   shift, and go to state 96

    $default  reduce using rule 48 (recursao6)

    recursao6  go to state 97
    mulop      go to state 98


State 60

   53 factor: chamada .

    $default  reduce using rule 53 (factor)


State 61

   54 factor: num .

    $default  reduce using rule 54 (factor)


State 62

   51 factor: endereco .

    $default  reduce using rule 51 (factor)


State 63

   33 instruc_cond: IF INI_PARAM . expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1
   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    expressao     go to state 99
    var           go to state 55
    express_simp  go to state 56
    express_soma  go to state 57
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    num           go to state 61
    endereco      go to state 62


State 64

   36 instruc_iterac: FOR INI_PARAM . expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC
   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    expressao     go to state 100
    var           go to state 55
    express_simp  go to state 56
    express_soma  go to state 57
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    num           go to state 61
    endereco      go to state 62


State 65

   37 instruc_return: RETURN expressao . FIM_EXPRESS

    FIM_EXPRESS  shift, and go to state 101


State 66

   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   56        | ID INI_PARAM . arg FIM_PARAM
   57 arg: . %empty  [FIM_PARAM]
   58    | . lista_arg
   59 lista_arg: . expressao recursao7
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    $default  reduce using rule 57 (arg)

    expressao     go to state 102
    var           go to state 55
    express_simp  go to state 56
    express_soma  go to state 57
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    arg           go to state 103
    lista_arg     go to state 104
    num           go to state 61
    endereco      go to state 62


State 67

   50 factor: INI_PARAM expressao . FIM_PARAM

    FIM_PARAM  shift, and go to state 105


State 68

   40 var: ID .

    $default  reduce using rule 40 (var)


State 69

   83 endereco: ACESSO_END var .

    $default  reduce using rule 83 (endereco)


State 70

   19 instruc_composta: INI_INSTRUC decl_local lista_instruc FIM_INSTRUC .

    $default  reduce using rule 19 (instruc_composta)


State 71

   25 recursao4: instrucao recursao4 .

    $default  reduce using rule 25 (recursao4)


State 72

   31 instruc_expr: expressao FIM_EXPRESS .

    $default  reduce using rule 31 (instruc_expr)


State 73

   62 atrop: ATR .

    $default  reduce using rule 62 (atrop)


State 74

   63 atrop: PLUS_ATR .

    $default  reduce using rule 63 (atrop)


State 75

   64 atrop: MINUS_ATR .

    $default  reduce using rule 64 (atrop)


State 76

   65 atrop: TIMES_ATR .

    $default  reduce using rule 65 (atrop)


State 77

   66 atrop: OVER_ATR .

    $default  reduce using rule 66 (atrop)


State 78

   38 expressao: . var atrop expressao
   38          | var atrop . expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    expressao     go to state 106
    var           go to state 55
    express_simp  go to state 56
    express_soma  go to state 57
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    num           go to state 61
    endereco      go to state 62


State 79

   67 relop: LT .

    $default  reduce using rule 67 (relop)


State 80

   68 relop: GT .

    $default  reduce using rule 68 (relop)


State 81

   69 relop: LE .

    $default  reduce using rule 69 (relop)


State 82

   70 relop: GE .

    $default  reduce using rule 70 (relop)


State 83

   71 relop: EQ .

    $default  reduce using rule 71 (relop)


State 84

   72 relop: NE .

    $default  reduce using rule 72 (relop)


State 85

   74 logop: NOT .

    $default  reduce using rule 74 (logop)


State 86

   75 logop: AND .

    $default  reduce using rule 75 (logop)


State 87

   76 logop: OR .

    $default  reduce using rule 76 (logop)


State 88

   41 express_simp: express_soma fatora2 .

    $default  reduce using rule 41 (express_simp)


State 89

   40 var: . ID
   43 fatora2: relop . express_soma
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    var           go to state 107
    express_soma  go to state 108
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    num           go to state 61
    endereco      go to state 62


State 90

   73 relop: logop .

    $default  reduce using rule 73 (relop)


State 91

   77 addop: PLUS_OP .

    $default  reduce using rule 77 (addop)


State 92

   78 addop: MINUS_OP .

    $default  reduce using rule 78 (addop)


State 93

   44 express_soma: termo recursao5 .

    $default  reduce using rule 44 (express_soma)


State 94

   40 var: . ID
   46 recursao5: addop . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    var       go to state 107
    termo     go to state 109
    factor    go to state 59
    chamada   go to state 60
    num       go to state 61
    endereco  go to state 62


State 95

   79 mulop: TIMES_OP .

    $default  reduce using rule 79 (mulop)


State 96

   80 mulop: OVER_OP .

    $default  reduce using rule 80 (mulop)


State 97

   47 termo: factor recursao6 .

    $default  reduce using rule 47 (termo)


State 98

   40 var: . ID
   49 recursao6: mulop . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    var       go to state 107
    factor    go to state 110
    chamada   go to state 60
    num       go to state 61
    endereco  go to state 62


State 99

   33 instruc_cond: IF INI_PARAM expressao . FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1

    FIM_PARAM  shift, and go to state 111


State 100

   36 instruc_iterac: FOR INI_PARAM expressao . FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC

    FIM_EXPRESS  shift, and go to state 112


State 101

   37 instruc_return: RETURN expressao FIM_EXPRESS .

    $default  reduce using rule 37 (instruc_return)


State 102

   59 lista_arg: expressao . recursao7
   60 recursao7: . %empty  [FIM_PARAM]
   61          | . SEPARA_ARG expressao recursao7

    SEPARA_ARG  shift, and go to state 113

    $default  reduce using rule 60 (recursao7)

    recursao7  go to state 114


State 103

   56 chamada: ID INI_PARAM arg . FIM_PARAM

    FIM_PARAM  shift, and go to state 115


State 104

   58 arg: lista_arg .

    $default  reduce using rule 58 (arg)


State 105

   50 factor: INI_PARAM expressao FIM_PARAM .

    $default  reduce using rule 50 (factor)


State 106

   38 expressao: var atrop expressao .

    $default  reduce using rule 38 (expressao)


State 107

   52 factor: var .

    $default  reduce using rule 52 (factor)


State 108

   43 fatora2: relop express_soma .

    $default  reduce using rule 43 (fatora2)


State 109

   45 recursao5: . %empty  [LT, GT, LE, GE, EQ, NE, NOT, AND, OR, FIM_PARAM, FIM_EXPRESS, SEPARA_ARG]
   46          | . addop termo recursao5
   46          | addop termo . recursao5
   77 addop: . PLUS_OP
   78      | . MINUS_OP

    PLUS_OP   shift, and go to state 91
    MINUS_OP  shift, and go to state 92

    $default  reduce using rule 45 (recursao5)

    recursao5  go to state 116
    addop      go to state 94


State 110

   48 recursao6: . %empty  [LT, GT, LE, GE, EQ, NE, NOT, AND, OR, PLUS_OP, MINUS_OP, FIM_PARAM, FIM_EXPRESS, SEPARA_ARG]
   49          | . mulop factor recursao6
   49          | mulop factor . recursao6
   79 mulop: . TIMES_OP
   80      | . OVER_OP

    TIMES_OP  shift, and go to state 95
    OVER_OP   shift, and go to state 96

    $default  reduce using rule 48 (recursao6)

    recursao6  go to state 117
    mulop      go to state 98


State 111

   33 instruc_cond: IF INI_PARAM expressao FIM_PARAM . INI_INSTRUC instrucao FIM_INSTRUC fatora1

    INI_INSTRUC  shift, and go to state 118


State 112

   36 instruc_iterac: FOR INI_PARAM expressao FIM_EXPRESS . express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    var           go to state 107
    express_simp  go to state 119
    express_soma  go to state 57
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    num           go to state 61
    endereco      go to state 62


State 113

   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   61 recursao7: SEPARA_ARG . expressao recursao7
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    expressao     go to state 120
    var           go to state 55
    express_simp  go to state 56
    express_soma  go to state 57
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    num           go to state 61
    endereco      go to state 62


State 114

   59 lista_arg: expressao recursao7 .

    $default  reduce using rule 59 (lista_arg)


State 115

   56 chamada: ID INI_PARAM arg FIM_PARAM .

    $default  reduce using rule 56 (chamada)


State 116

   46 recursao5: addop termo recursao5 .

    $default  reduce using rule 46 (recursao5)


State 117

   49 recursao6: mulop factor recursao6 .

    $default  reduce using rule 49 (recursao6)


State 118

   19 instruc_composta: . INI_INSTRUC decl_local lista_instruc FIM_INSTRUC
   26 instrucao: . instruc_expr
   27          | . instruc_composta
   28          | . instruc_cond
   29          | . instruc_iterac
   30          | . instruc_return
   31 instruc_expr: . expressao FIM_EXPRESS
   32             | . FIM_EXPRESS
   33 instruc_cond: . IF INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1
   33             | IF INI_PARAM expressao FIM_PARAM INI_INSTRUC . instrucao FIM_INSTRUC fatora1
   36 instruc_iterac: . FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC
   37 instruc_return: . RETURN expressao FIM_EXPRESS
   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    IF           shift, and go to state 36
    FOR          shift, and go to state 37
    RETURN       shift, and go to state 38
    LITERAL      shift, and go to state 39
    INTEIRO      shift, and go to state 40
    DECIMAL      shift, and go to state 41
    ID           shift, and go to state 42
    INI_PARAM    shift, and go to state 43
    INI_INSTRUC  shift, and go to state 26
    FIM_EXPRESS  shift, and go to state 44
    ACESSO_END   shift, and go to state 45

    instruc_composta  go to state 46
    instrucao         go to state 121
    instruc_expr      go to state 50
    instruc_cond      go to state 51
    instruc_iterac    go to state 52
    instruc_return    go to state 53
    expressao         go to state 54
    var               go to state 55
    express_simp      go to state 56
    express_soma      go to state 57
    termo             go to state 58
    factor            go to state 59
    chamada           go to state 60
    num               go to state 61
    endereco          go to state 62


State 119

   36 instruc_iterac: FOR INI_PARAM expressao FIM_EXPRESS express_simp . FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC

    FIM_EXPRESS  shift, and go to state 122


State 120

   60 recursao7: . %empty  [FIM_PARAM]
   61          | . SEPARA_ARG expressao recursao7
   61          | SEPARA_ARG expressao . recursao7

    SEPARA_ARG  shift, and go to state 113

    $default  reduce using rule 60 (recursao7)

    recursao7  go to state 123


State 121

   33 instruc_cond: IF INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao . FIM_INSTRUC fatora1

    FIM_INSTRUC  shift, and go to state 124


State 122

   36 instruc_iterac: FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS . expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC
   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    LITERAL     shift, and go to state 39
    INTEIRO     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    ID          shift, and go to state 42
    INI_PARAM   shift, and go to state 43
    ACESSO_END  shift, and go to state 45

    expressao     go to state 125
    var           go to state 55
    express_simp  go to state 56
    express_soma  go to state 57
    termo         go to state 58
    factor        go to state 59
    chamada       go to state 60
    num           go to state 61
    endereco      go to state 62


State 123

   61 recursao7: SEPARA_ARG expressao recursao7 .

    $default  reduce using rule 61 (recursao7)


State 124

   33 instruc_cond: IF INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC . fatora1
   34 fatora1: . %empty  [IF, FOR, RETURN, LITERAL, INTEIRO, DECIMAL, ID, INI_PARAM, INI_INSTRUC, FIM_INSTRUC, FIM_EXPRESS, ACESSO_END]
   35        | . ELSE INI_INSTRUC instrucao FIM_INSTRUC

    ELSE  shift, and go to state 126

    $default  reduce using rule 34 (fatora1)

    fatora1  go to state 127


State 125

   36 instruc_iterac: FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao . FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC

    FIM_PARAM  shift, and go to state 128


State 126

   35 fatora1: ELSE . INI_INSTRUC instrucao FIM_INSTRUC

    INI_INSTRUC  shift, and go to state 129


State 127

   33 instruc_cond: IF INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1 .

    $default  reduce using rule 33 (instruc_cond)


State 128

   36 instruc_iterac: FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM . INI_INSTRUC instrucao FIM_INSTRUC

    INI_INSTRUC  shift, and go to state 130


State 129

   19 instruc_composta: . INI_INSTRUC decl_local lista_instruc FIM_INSTRUC
   26 instrucao: . instruc_expr
   27          | . instruc_composta
   28          | . instruc_cond
   29          | . instruc_iterac
   30          | . instruc_return
   31 instruc_expr: . expressao FIM_EXPRESS
   32             | . FIM_EXPRESS
   33 instruc_cond: . IF INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1
   35 fatora1: ELSE INI_INSTRUC . instrucao FIM_INSTRUC
   36 instruc_iterac: . FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC
   37 instruc_return: . RETURN expressao FIM_EXPRESS
   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    IF           shift, and go to state 36
    FOR          shift, and go to state 37
    RETURN       shift, and go to state 38
    LITERAL      shift, and go to state 39
    INTEIRO      shift, and go to state 40
    DECIMAL      shift, and go to state 41
    ID           shift, and go to state 42
    INI_PARAM    shift, and go to state 43
    INI_INSTRUC  shift, and go to state 26
    FIM_EXPRESS  shift, and go to state 44
    ACESSO_END   shift, and go to state 45

    instruc_composta  go to state 46
    instrucao         go to state 131
    instruc_expr      go to state 50
    instruc_cond      go to state 51
    instruc_iterac    go to state 52
    instruc_return    go to state 53
    expressao         go to state 54
    var               go to state 55
    express_simp      go to state 56
    express_soma      go to state 57
    termo             go to state 58
    factor            go to state 59
    chamada           go to state 60
    num               go to state 61
    endereco          go to state 62


State 130

   19 instruc_composta: . INI_INSTRUC decl_local lista_instruc FIM_INSTRUC
   26 instrucao: . instruc_expr
   27          | . instruc_composta
   28          | . instruc_cond
   29          | . instruc_iterac
   30          | . instruc_return
   31 instruc_expr: . expressao FIM_EXPRESS
   32             | . FIM_EXPRESS
   33 instruc_cond: . IF INI_PARAM expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC fatora1
   36 instruc_iterac: . FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC
   36               | FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC . instrucao FIM_INSTRUC
   37 instruc_return: . RETURN expressao FIM_EXPRESS
   38 expressao: . var atrop expressao
   39          | . express_simp
   40 var: . ID
   41 express_simp: . express_soma fatora2
   44 express_soma: . termo recursao5
   47 termo: . factor recursao6
   50 factor: . INI_PARAM expressao FIM_PARAM
   51       | . endereco
   52       | . var
   53       | . chamada
   54       | . num
   55       | . LITERAL
   56 chamada: . ID INI_PARAM arg FIM_PARAM
   81 num: . INTEIRO
   82    | . DECIMAL
   83 endereco: . ACESSO_END var

    IF           shift, and go to state 36
    FOR          shift, and go to state 37
    RETURN       shift, and go to state 38
    LITERAL      shift, and go to state 39
    INTEIRO      shift, and go to state 40
    DECIMAL      shift, and go to state 41
    ID           shift, and go to state 42
    INI_PARAM    shift, and go to state 43
    INI_INSTRUC  shift, and go to state 26
    FIM_EXPRESS  shift, and go to state 44
    ACESSO_END   shift, and go to state 45

    instruc_composta  go to state 46
    instrucao         go to state 132
    instruc_expr      go to state 50
    instruc_cond      go to state 51
    instruc_iterac    go to state 52
    instruc_return    go to state 53
    expressao         go to state 54
    var               go to state 55
    express_simp      go to state 56
    express_soma      go to state 57
    termo             go to state 58
    factor            go to state 59
    chamada           go to state 60
    num               go to state 61
    endereco          go to state 62


State 131

   35 fatora1: ELSE INI_INSTRUC instrucao . FIM_INSTRUC

    FIM_INSTRUC  shift, and go to state 133


State 132

   36 instruc_iterac: FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao . FIM_INSTRUC

    FIM_INSTRUC  shift, and go to state 134


State 133

   35 fatora1: ELSE INI_INSTRUC instrucao FIM_INSTRUC .

    $default  reduce using rule 35 (fatora1)


State 134

   36 instruc_iterac: FOR INI_PARAM expressao FIM_EXPRESS express_simp FIM_EXPRESS expressao FIM_PARAM INI_INSTRUC instrucao FIM_INSTRUC .

    $default  reduce using rule 36 (instruc_iterac)
